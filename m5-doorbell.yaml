esphome:
  name: m5-doorbell

esp32:
  board: m5stack-atom
  framework:
    type: esp-idf
    version: recommended

wifi:
  domain: !secret domain
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "M5-Doorbell Fallback Hotspot"
    password: !secret fallback_password

esp32_ble_tracker:
  scan_parameters:
    # We currently use the defaults to ensure Bluetooth
    # can co-exist with WiFi In the future we may be able to
    # enable the built-in coexistence logic in ESP-IDF
    active: true

bluetooth_proxy:
  active: true

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret m5_doorbell_api_key

ota:

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: Doorbell ESPHome Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: Doorbell IP
    ssid:
      name: Doorbell SSID
    bssid:
      name: Doorbell BSSID

# Sensors with general information.
sensor:
  # Uptime sensor.
  - platform: uptime
    name: Doorbell Uptime
    id: uptime_sensor
    on_value_range:
      above: 1000000
      then:
        - button.press: restart_bell

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: Doorbell WiFi Signal
    update_interval: 60s

# Exposed switches.
button:
  # Switch to restart the doorbell.
  - platform: restart
    name: Doorbell Restart
    id: restart_bell

output:
  # Switch to turn on/off the chime.
  - platform: gpio
    id: chime_relay
    pin:
      number: GPIO22
      mode: OUTPUT

# Binary sensor representing the
# Doorbell button push.
binary_sensor:
  # Binary Input to turn on/off chime when
  # doorbell button is pushed.
  #
  # It creates a "virtual" switch based
  # on a home assistant state variable.
  - platform: homeassistant
    name: "Nap mode input from home assistant"
    id: nap_mode
    entity_id: input_boolean.nap_mode

  - platform: homeassistant
    name: "Quite mode input from home assistant"
    id: quite_mode
    entity_id: input_boolean.quite_mode

  - platform: homeassistant
    name: "Master white noise is on"
    id: adult_asleep
    entity_id: switch.master_white_noise

  - platform: gpio
    id: doorbell_button
    name: Doorbell Button
    pin:
      number: GPIO25
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      # Small filter, to debounce the button press.
      - delayed_on: 5ms
      - delayed_off: 5s
    on_press:
      then:
        if:
          condition:
            and:
              - binary_sensor.is_off: nap_mode
              - binary_sensor.is_off: quite_mode
              - binary_sensor.is_off: adult_asleep
          then:
            - output.turn_on: chime_relay
            - delay: 110ms
            - output.turn_off: chime_relay
