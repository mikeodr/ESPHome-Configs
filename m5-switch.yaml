esphome:
  name: "m5-switch"

esp32:
  board: m5stack-atom
  framework:
    type: esp-idf
    version: recommended

wifi:
  domain: !secret domain
  ssid: !secret wifi_ssid
  password: !secret iot_wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "M5-Switch Fallback Hotspot"
    password: !secret fallback_password

captive_portal:

esp32_ble_tracker:
  scan_parameters:
    # We currently use the defaults to ensure Bluetooth
    # can co-exist with WiFi In the future we may be able to
    # enable the built-in coexistence logic in ESP-IDF
    active: true

bluetooth_proxy:
  active: true

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret m5_switch_api_key

ota:
  password: !secret ota_password
  platform: esphome

# Text sensors with general information.
text_sensor:
  # Expose ESPHome version as sensor.
  - platform: version
    name: ESPHome Version
  # Expose WiFi information as sensors.
  - platform: wifi_info
    ip_address:
      name: IP
    ssid:
      name: SSID
    bssid:
      name: BSSID

# Sensors with general information.
sensor:
  # Uptime sensor.
  - platform: uptime
    name: Uptime
    id: uptime_sensor
    on_value_range:
      above: 1000000
      then:
        - button.press: restart_esp

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: WiFi Signal
    update_interval: 60s

# Exposed switches.
button:
  # Switch to restart the esp.
  - platform: restart
    name: Restart
    id: restart_esp
